
name: Deploy to EKS scalingo app

on:
  push:
    branches:
      - 'main'
      - 'testing'

env:
  ECR_REPOSITORY: scalingo
  IMAGE_TAG: ${{ github.sha }}
  RELEASE_NAME: scalingo-chart
  REGION: ap-southeast-2
  CHART_NAME: scalingo-chart
  CLUSTER_NAME: EKS-Cluster

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      
      - name: Log in to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ secrets.ECR_REPO_URI }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REPO_URI }}:${{ github.sha }}
          echo "run id is ${{ github.sha }}"

      - name: Install Kubectl
        run: |
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.17/2023-01-30/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
          echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
          

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION

      - name: Deploy to EKS $GITHUB_REF_NAME namespace
        run: |
          export values="replicaCount=1,image.tag=${{ github.sha }}"
          helm upgrade --install -f --namespace main scalingo-chart ./scalingo-chart --values ./scalingo-chart/values.yaml --set image.tag=${values} --debug --dry-run --force
          sleep 10s
          kubectl get svc --namespace $GITHUB_REF_NAME
